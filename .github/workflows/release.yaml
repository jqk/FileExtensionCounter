name: Create release from new tag

# this flow will be run only when new tags are pushed that match our pattern
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        # 定义生成目标的操作系统的相关变量，即使有重复，也要分别定义，如 goarch。
        include:
          - goos: windows
            artifactext: ".exe"
            os: windows-latest
            # 如果在 windows 下运行，环境变量前要加上 $Env。
            # outputenv: "$Env:GITHUB_OUTPUT"
            outputenv: "$GITHUB_OUTPUT"
            # 因为不同平台用的内容相同，所以也可以使用 env 定义在外层，但集中一起更直观。
            artifactname: "fec"
            goarch: amd64

    steps:
      - name: Extract tag name
        id: extract_tag
        run: echo "::set-output name=tag_name::${{ github.ref }}"

      - name: Remove tag name prefix
        id: remove_prefix
        run: |
            echo "Tag name with prefix: ${{ steps.extract_tag.outputs.tag_name }}" 
            tag_name=${{ steps.extract_tag.outputs.tag_name }}
            tag_name=${tag_name#refs/tags/}
            echo "::set-output name=tag_name::${tag_name}"
        

      - name: Get version
        id: get_version
        run: echo "${{ github.ref }}" | sed 's/refs\/tags\///'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Update go.sum
        run: go mod tidy

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.20.0"
          cache: true

      - name: Build
        run: go build -o ${{ matrix.artifactname }}${{ matrix.artifactext }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0

      - name: Packaging
        # 即使在 windows 中执行 github action，也不需要提前安装 tar，已内置。
        #run: tar czf  ${{ matrix.artifactname }}-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.remove_prefix.outputs.tag_name }}.tgz ${{ matrix.artifactname }}${{ matrix.artifactext }}
        run: tar czf  ${{ matrix.artifactname }}-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.stdout }}.tgz ${{ matrix.artifactname }}${{ matrix.artifactext }}

      - name: Create GitHub release from tag
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tgz
